uniform vec2 camPosition;
uniform vec2 camSize;
uniform vec3 lightPosition;
// uniform float cameraHeight;

varying vec2 textureCoords;
varying vec3 eyeVec;
varying vec3 lightVec;
varying vec2 worldCoords;
varying vec4 colorData;

void main() 
{  
    textureCoords = gl_MultiTexCoord0.xy;
    colorData = gl_Color;

    eyeVec = vec3(camPosition, 5) - gl_Vertex.xyz;
    lightVec = lightPosition - gl_Vertex.xyz;
    
    vec2 camView = camSize / vec2(2, 2);
	worldCoords = gl_Vertex.xy;
    vec2 position = gl_Vertex.xy;
    position -= camPosition;
    position /= camView;
    gl_Position = vec4(position, 0.0, 1.0);
}